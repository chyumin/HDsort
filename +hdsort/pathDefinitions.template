function def = pathDefinitions(varargin)
    % This is a template for a function that allows you to transform the path
    % between different operation systems (Windows, macOS, linux) when they
    % share a common file system. This function is called in the function 
    % 'hdsort.util.convertPathToOS' which in turn is called at several
    % locations in the code, especially in the tools for grid computing.
    % Please define all the root paths that you are using, especially when 
    % using several different servers.
    % The example in this template should give you an idea on how to do that.
    
    if nargin == 0
        OStype = computer;
    else
        OStype = varargin{1};
    end

    def.pdefsPath = pwd;
    def.callerPath = [];
    
    user_name = getenv('USER');
    
    if ~isempty(strfind(OStype, 'WIN'))
        def.server01 = '\\bs-filesvr01\';
        def.server02 = '\\bs-filesvr02\';
        def.localData = '\\C:[add something]';
        
    elseif ~isempty(strfind(OStype, 'MAC'))
        def.server01 = fullfile('/Volumes', 'filesvr01');
        def.server02 = fullfile('/Volumes', 'filesvr02'); 
        def.localData = fullfile('/Users', user_name, 'tmp'); 

    elseif ~isempty(strfind(OStype, 'GLNXA64'))
        def.server01 = fullfile('/net', 'bs-filesvr01');
        def.server02 = fullfile('/net', 'bs-filesvr02');
        def.localData = fullfile('home', user_name, 'tmp');
    else
        error('OS unknown!')
    end
    
    def.analyzed = fullfile(def.server01, 'analysed');
    def.recordings = fullfile(def.server02, 'recordings');
    def.buffer = fullfile(def.server02, 'intermediate_data');
 
end
